<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" prefix="dc: http://purl.org/dc/elements/1.1/">
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to YB SOW."/><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"/>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

<meta name="dc:creator" content="YB SOW" />
<meta name="dc:title" content="Algorithme - Python - Chap3: STRUCTURER UN ALGORITHME" />



<title>
Algorithme - Python - Chap3: STRUCTURER UN ALGORITHME
</title>

<!-- Made with executable version 7.0 Release 3 Build 0 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style>


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 7.0 Release 3 Build 0 */



/* CSS variables for colours. */
:root{
	--strFontFace:       Arial,"Comic Sans MS",Geneva,sans-serif;
	--strFontSize:       medium;
	--strTextColor:      #000000;
	--strTitleColor:     #000000;

	--strFuncLightColor: #7f7f7f;
	--strFuncShadeColor: #000000;
	--strLinkColor:      #0000FF;
	--strVLinkColor:     #0000CC;
	
	--strNavBarColor:    #000000;
	--strNavLightColor:  #7f7f7f;
	--strNavShadeColor:  #000000;
	--strNavTextColor:   #ffffff;
	
	--strPageBGColor:    #C0C0C0;
	--strExBGColor:      #000000;
}

body{
	font-family: var(--strFontFace);
	background-color: var(--strPageBGColor);
	color: var(--strTextColor);
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: var(--strFontSize);
	padding-bottom: 0.5em;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 1em;
}

table,div,span,td{
	font-size: 1em;
	color: var(--strTextColor);
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: var(--strTitleColor);
}

button{
	font-family: var(--strFontFace);
	font-size: 1em;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: var(--strTitleColor);
}

.ExerciseSubtitle{
	font-size: 120%;
	color: var(--strTitleColor);
}

div.StdDiv, div.ExerciseContainer, div.ReadingContainer{
	background-color: var(--strExBGColor);
	text-align: center;
	font-size: 1em;
	color: var(--strTextColor);
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: var(--strTextColor);
	margin-bottom: 1px;
}

div.ReadingContainer, div.ExerciseContainer{
	min-width: 15em;
	flex-grow: 1;
	flex-basis: 0;
	margin: 1px;
}

div#ContainerDiv{
	margin: -1px;
	padding: 0;
	border: none;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", var(--strFontFace);
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: var(--strTitleColor);
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: var(--strTitleColor);
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: var(--strTitleColor);
}

.LeftItem{
	font-size: 1em;
	color: var(--strTextColor);
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 1em;
	color: var(--strTextColor);
	text-align: left;
}

span.CorrectMark{

}

input, textarea{
	font-family: var(--strFontFace);
	font-size: 120%;
}

select{
	font-size: 1em;
}

div.Feedback {
	background-color: var(--strPageBGColor);
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: var(--strTitleColor);
	position: absolute;
	display: none;
	font-size: 1em;
}




div.ExerciseDiv{
	color: var(--strTextColor);
}

/* JMatch standard output table. */
table.MatchTable{
	margin: 2em auto; 
	border-width: 0;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: var(--strTextColor);
	border-color: var(--strTextColor);
	margin-left: auto;
	margin-right: auto;
	margin-top: 2em;
	margin-bottom: 2em;
	/*width: 90%;*/
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: var(--strExBGColor);
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
	background-color: var(--strPageBGColor);
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div.JMixDrag, div.JMatchDrag{
	padding: 0;
	background-color: var(--strPageBGColor);
	border-style: none;
}

div#GuessDiv{
	padding: 0.5em;
	margin-bottom: 2em;
}

div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: var(--strTextColor);
	display: inline-block;
	padding: 0.5em;
	border: solid 1pt gray;
	margin-bottom: 0.5em;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: left;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: var(--strTitleColor);
	width: 80%;
	left: 10%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: var(--strFontFace);
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: var(--strFontFace);
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 1em;
}

.Answer{
	font-size: 120%;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: var(--strTitleColor);
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;

	border-left-color: var(--strFuncLightColor);
	border-top-color: var(--strFuncLightColor);
	border-right-color: var(--strFuncShadeColor);
	border-bottom-color: var(--strFuncShadeColor);
	color: var(--strTextColor);
	background-color: var(--strExBGColor);

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em var(--strFuncShadeColor);
}

.FuncButton:active {
	box-shadow: none;
}

.FuncButton:hover{
	color: var(--strExBGColor);
	background-color: var(--strTextColor);
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: var(--strNavBarColor);
	text-align: center;
	margin: 0.25rem 0;
	clear: both;
	font-size: 1em;
	padding: 0.2em;
	box-sizing: border-box;
}

.NavButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;
	
	border-left-color: var(--strNavLightColor);
	border-top-color: var(--strNavLightColor);
	border-right-color: var(--strNavShadeColor);
	border-bottom-color: var(--strNavShadeColor); 
	background-color: var(--strNavBarColor);
	color: var(--strNavTextColor);

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
}

.NavButton:active {
	box-shadow: none;
}

.NavButton:hover{
	color: var(--strNavBarColor);
	background-color: var(--strNavTextColor);
}

/*EndNavBarStyle*/

a{
	color: var(--strLinkColor);
}

a:visited{
	color: var(--strVLinkColor);
}

a:hover{
	color: var(--strLinkColor);
}

div.CardStyle {
	position: absolute;
	font-family: var(--strFontFace);
	font-size: 1em;
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 2em;
	border-width: 1pt;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
	background-color: var(--strExBGColor);
	left: -50px;
	top: -50px;
	overflow: visible;
	touch-action: none;
	user-select: none;
	box-sizing: border-box;
}

div.CardStyleCentered{
	text-align: center;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script>

//<![CDATA[

<!--




//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
			}
			else{
				Els[i].style.visibility = 'hidden';
			}
		} 
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].offsetWidth;
	this.H = document.getElementsByTagName('body')[0].offsetHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	thisKey = e.keyCode;

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
		e.preventDefault();
	}
}

window.addEventListener('keypress',SuppressBackspace,false);

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

}




function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//SELECTION OBJECT FOR TYPING WITH KEYPAD
var selObj = null;
            
SelObj = function(box){
	this.box = box;
	this.selStart = this.box.selectionStart;
	this.selEnd = this.box.selectionEnd;
	this.selText = this.box.value.substring(this.selStart, this.selEnd);
	return this;
}

function setSelText(newText){
	var caretPos = this.selStart + newText.length;
	var newValue = this.box.value.substring(0, this.selStart);
	newValue += newText;
	newValue += this.box.value.substring(this.selEnd, this.box.value.length);
	this.box.value = newValue;
	this.box.setSelectionRange(caretPos, caretPos);
	this.box.focus();
}
SelObj.prototype.setSelText = setSelText;

function setSelSelectionRange(start, end){
	this.box.setSelectionRange(start, end);
}
SelObj.prototype.setSelSelectionRange = setSelSelectionRange;

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}







//JQUIZ CORE JAVASCRIPT CODE

var CurrQNum = 0;
var CorrectIndicator = '&#x2714;';
var IncorrectIndicator = '&#x2718;';
var YourScoreIs = 'Your score is ';

//New for 6.2.2.0
var CompletedSoFar = 'Questions completed so far: ';
var ExerciseCompleted = 'You have completed the exercise.';
var ShowCompletedSoFar = true;

var ContinuousScoring = true;
var CorrectFirstTime = 'Questions answered correctly first time: ';
var ShowCorrectFirstTime = true;
var ShuffleQs = true;
var ShuffleAs = true;
var DefaultRight = 'Correct!';
var DefaultWrong = 'Sorry! Try again.';
var QsToShow = 7;
var Score = 0;
var Finished = false;
var Qs = null;
var QArray = new Array();
var ShowingAllQuestions = false;
var ShowAllQuestionsCaption = 'Show all questions';
var ShowOneByOneCaption = 'Show questions one by one';
var State = new Array();
var Feedback = '';
var TimeOver = false;
var strInstructions = '';
var Locked = false;

//The following variable can be used to add a message explaining that
//the question is finished, so no further marking will take place.
var strQuestionFinished = '';

function CompleteEmptyFeedback(){
	var QNum, ANum;
	for (QNum=0; QNum<I.length; QNum++){
//Only do this if not multi-select
		if (I[QNum][2] != '3'){
  		for (ANum = 0; ANum<I[QNum][3].length; ANum++){
  			if (I[QNum][3][ANum][1].length < 1){
  				if (I[QNum][3][ANum][2] > 0){
  					I[QNum][3][ANum][1] = DefaultRight;
  				}
  				else{
  					I[QNum][3][ANum][1] = DefaultWrong;
  				}
  			}
  		}
		}
	}
}

function SetUpQuestions(){
	var AList = new Array(); 
	var QList = new Array();
	var i, j;
	Qs = document.getElementById('Questions');
	while (Qs.getElementsByTagName('li').length > 0){
		QList.push(Qs.removeChild(Qs.getElementsByTagName('li')[0]));
	}
	var DumpItem = 0;
	if (QsToShow > QList.length){
		QsToShow = QList.length;
	}
	while (QsToShow < QList.length){
		DumpItem = Math.floor(QList.length*Math.random());
		for (j=DumpItem; j<(QList.length-1); j++){
			QList[j] = QList[j+1];
		}
		QList.length = QList.length-1;
	}
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}
	if (ShuffleAs == true){
		var As;
		for (var i=0; i<QList.length; i++){
			As = QList[i].getElementsByTagName('ol')[0];
			if (As != null){
  			AList.length = 0;
				while (As.getElementsByTagName('li').length > 0){
					AList.push(As.removeChild(As.getElementsByTagName('li')[0]));
				}
				AList = Shuffle(AList);
				for (j=0; j<AList.length; j++){
					As.appendChild(AList[j]);
				}
			}
		}
	}
	
	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
		QArray[QArray.length] = QList[i];
	}

//Show the first item
	QArray[0].style.display = '';
	
//Now hide all except the first item
	for (i=1; i<QArray.length; i++){
		QArray[i].style.display = 'none';
	}		
	SetQNumReadout();
	
	SetFocusToTextbox();
}

function SetFocusToTextbox(){
//if there's a textbox, set the focus in it
	if (QArray[CurrQNum].getElementsByTagName('input')[0] != null){
		QArray[CurrQNum].getElementsByTagName('input')[0].focus();
//and show a keypad if there is one
		if (document.getElementById('CharacterKeypad') != null){
			document.getElementById('CharacterKeypad').style.display = 'block';
		}
	}
	else{
  	if (QArray[CurrQNum].getElementsByTagName('textarea')[0] != null){
  		QArray[CurrQNum].getElementsByTagName('textarea')[0].focus();	
//and show a keypad if there is one
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'block';
			}
		}
//This added for 6.0.4.11: hide accented character buttons if no textbox
		else{
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'none';
			}
		}
	}
}

function ChangeQ(ChangeBy){
//The following line prevents moving to another question until the current
//question is answered correctly. Uncomment it to enable this behaviour. 
//	if (State[CurrQNum][0] == -1){return;}
	if (((CurrQNum + ChangeBy) < 0)||((CurrQNum + ChangeBy) >= QArray.length)){return;}
	QArray[CurrQNum].style.display = 'none';
	CurrQNum += ChangeBy;
	QArray[CurrQNum].style.display = '';
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
	SetQNumReadout();
	SetFocusToTextbox();
}

var HiddenReadingShown = false;
function ShowSpecialReadingForQuestion(){
//Undocumented function for showing specific reading text elements which change with each question
//Added on 10/12/2004
	if (document.getElementById('ReadingDiv') != null){
		if (HiddenReadingShown == true){
			document.getElementById('ReadingDiv').innerHTML = '';
		}
		if (QArray[CurrQNum] != null){
//Fix for 6.0.4.25
			var Children = QArray[CurrQNum].getElementsByTagName('div');
			for (var i=0; i<Children.length; i++){
			if (Children[i].className=="HiddenReading"){
					document.getElementById('ReadingDiv').innerHTML = Children[i].innerHTML;
					HiddenReadingShown = true;
//Hide the ShowAllQuestions button to avoid confusion
					if (document.getElementById('ShowMethodButton') != null){
						document.getElementById('ShowMethodButton').style.display = 'none';
					}
				}
			}	
		}
	}
}

function SetQNumReadout(){
	document.getElementById('QNumReadout').innerHTML = (CurrQNum+1) + ' / ' + QArray.length;
	if ((CurrQNum+1) >= QArray.length){
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'visible';
		}
	}
	if (CurrQNum <= 0){
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'visible';
		}
	}
}

var I=new Array();
I[0]=new Array();I[0][0]=100;
I[0][1]='';
I[0][2]='0';
I[0][3]=new Array();
I[0][3][0]=new Array('Une proc\u00E9dure ne renvoie pas de valeur, alors qu\'une fonction renvoie une valeur.','Une proc\u00E9dure est un sous-programme qui r\u00E9alise une t\u00E2che sans renvoyer de r\u00E9sultat. Une fonction est un sous-programme qui r\u00E9alise une t\u00E2che et renvoie un r\u00E9sultat. Par exemple, la proc\u00E9dure Afficher(x) affiche la valeur de x \u00E0 l\'\u00E9cran, mais ne renvoie rien. La fonction Carr\u00E9(x) renvoie le carr\u00E9 de x, mais n\'affiche rien.',1,100,1);
I[0][3][1]=new Array('Une proc\u00E9dure renvoie une valeur, alors qu\'une fonction ne renvoie pas de valeur.','',0,0,1);
I[0][3][2]=new Array('Une proc\u00E9dure et une fonction sont synonymes.','',0,0,1);
I[0][3][3]=new Array('Une proc\u00E9dure est un ensemble d\'instructions, alors qu\'une fonction est un ensemble de donn\u00E9es.','',0,0,1);
I[1]=new Array();I[1][0]=100;
I[1][1]='';
I[1][2]='0';
I[1][3]=new Array();
I[1][3][0]=new Array('Un param\u00E8tre formel est le nom donn\u00E9 \u00E0 un param\u00E8tre dans la d\u00E9finition d\'un sous-programme, alors qu\'un param\u00E8tre effectif est la valeur ou la variable pass\u00E9e \u00E0 un sous-programme lors de son appel.','Un param\u00E8tre formel est une variable locale au sous-programme qui re\u00E7oit la valeur ou l\'adresse du param\u00E8tre effectif lors de l\'appel du sous-programme. Par exemple, dans la d\u00E9finition de la fonction Carr\u00E9(x), x est le param\u00E8tre formel. Dans l\'appel de la fonction Carr\u00E9(5), 5 est le param\u00E8tre effectif.',1,100,1);
I[1][3][1]=new Array('Un param\u00E8tre formel est la valeur ou la variable pass\u00E9e \u00E0 un sous-programme lors de son appel, alors qu\'un param\u00E8tre effectif est le nom donn\u00E9 \u00E0 un param\u00E8tre dans la d\u00E9finition d\'un sous-programme.','',0,0,1);
I[1][3][2]=new Array('Un param\u00E8tre formel et un param\u00E8tre effectif sont synonymes.','',0,0,1);
I[1][3][3]=new Array('Un param\u00E8tre formel est le type d\'un param\u00E8tre, alors qu\'un param\u00E8tre effectif est le nom d\'un param\u00E8tre.','',0,0,1);
I[2]=new Array();I[2][0]=100;
I[2][1]='';
I[2][2]='0';
I[2][3]=new Array();
I[2][3][0]=new Array('Par valeur et par r\u00E9f\u00E9rence.','Le passage des param\u00E8tres par valeur consiste \u00E0 transmettre au sous-programme une copie du param\u00E8tre effectif. Le passage des param\u00E8tres par r\u00E9f\u00E9rence consiste \u00E0 transmettre au sous-programme l\'adresse du param\u00E8tre effectif. Par exemple, si on appelle la proc\u00E9dure Echanger(a,b) avec les variables a=2 et b=3 en passant les param\u00E8tres par valeur, les valeurs de a et b ne seront pas modifi\u00E9es apr\u00E8s l\'appel. Si on appelle la m\u00EAme proc\u00E9dure en passant les param\u00E8tres par r\u00E9f\u00E9rence, les valeurs de a et b seront \u00E9chang\u00E9es apr\u00E8s l\'appel.',1,100,1);
I[2][3][1]=new Array('Par nom et par type.','',0,0,1);
I[2][3][2]=new Array('Par copie et par partage.','',0,0,1);
I[2][3][3]=new Array('Par ordre et par choix.','',0,0,1);
I[3]=new Array();I[3][0]=100;
I[3][1]='';
I[3][2]='0';
I[3][3]=new Array();
I[3][3][0]=new Array('Une variable locale est d\u00E9clar\u00E9e dans le corps d\'un sous-programme, alors qu\'une variable globale est d\u00E9clar\u00E9e en dehors de tout sous-programme.','Une variable locale n\'existe que pendant l\'ex\u00E9cution du sous-programme dans lequel elle est d\u00E9clar\u00E9e. Elle n\'est pas accessible depuis les autres sous-programmes. Une variable globale existe pendant toute l\'ex\u00E9cution du programme. Elle est accessible depuis tous les sous-programmes. Par exemple, si on d\u00E9clare la variable x=10 en dehors de tout sous-programme, x est une variable globale. Si on d\u00E9clare la variable y=20 dans le corps de la proc\u00E9dure Afficher(x), y est une variable locale \u00E0 cette proc\u00E9dure.',1,100,1);
I[3][3][1]=new Array('Une variable locale est d\u00E9clar\u00E9e en dehors de tout sous-programme, alors qu\'une variable globale est d\u00E9clar\u00E9e dans le corps d\'un sous-programme.','',0,0,1);
I[3][3][2]=new Array('Une variable locale et une variable globale sont synonymes.','',0,0,1);
I[3][3][3]=new Array('Une variable locale est d\u00E9clar\u00E9e avec le mot-cl\u00E9 local, alors qu\'une variable globale est d\u00E9clar\u00E9e avec le mot-cl\u00E9 global.','',0,0,1);
I[4]=new Array();I[4][0]=100;
I[4][1]='';
I[4][2]='0';
I[4][3]=new Array();
I[4][3][0]=new Array('10 100 20','La fonction Double renvoie le double du param\u00E8tre effectif pass\u00E9 lors de son appel. La proc\u00E9dure Carr\u00E9 affiche le carr\u00E9 du param\u00E8tre effectif pass\u00E9 lors de son appel. Les param\u00E8tres sont pass\u00E9s par valeur, donc les variables n et m ne sont pas modifi\u00E9es par les appels des sous-programmes. La variable n est une variable globale, donc elle est accessible depuis le programme principal et les sous-programmes. La variable m est une variable locale au programme principal, donc elle n\'est pas accessible depuis les sous-programmes. L\'affichage du programme est donc: Double(n) = Double(5) = 25 = 10 Carr\u00E9(m) = Carr\u00E9(10) = afficher 1010 = afficher 100 n = m = n = 10 Double(n) = Double(10) = 2*10 = 20',1,100,1);
I[4][3][1]=new Array('10 100 10','',0,0,1);
I[4][3][2]=new Array('5 25 10','',0,0,1);
I[4][3][3]=new Array('5 25 20','',0,0,1);
I[5]=new Array();I[5][0]=100;
I[5][1]='';
I[5][2]='0';
I[5][3]=new Array();
I[5][3][0]=new Array('8 6 27','La fonction Cube renvoie le cube du param\u00E8tre effectif pass\u00E9 lors de son appel. La proc\u00E9dure Produit affiche le produit des deux param\u00E8tres effectifs pass\u00E9s lors de son appel. Les param\u00E8tres sont pass\u00E9s par valeur, donc les variables x, y, z, a et b ne sont pas modifi\u00E9es par les appels des sous-programmes. La variable x est une variable globale, donc elle est accessible depuis le programme principal et les sous-programmes. Les variables y, z, a et b sont des variables locales aux sous-programmes dans lesquels elles sont d\u00E9clar\u00E9es, donc elles ne sont pas accessibles depuis les autres sous-programmes. L\'affichage du programme est donc: Cube(x) = Cube(2) = retourner 222 = retourner 8 Produit(x,z) = Produit(2,3) = afficher 23 = afficher 6 x = Cube(z) = x = Cube(3) = x = retourner 33*3 = x = retourner 27 afficher x = afficher 27',1,100,1);
I[5][3][1]=new Array('8 6 8','',0,0,1);
I[5][3][2]=new Array('2 9 27','',0,0,1);
I[5][3][3]=new Array('2 9 8','',0,0,1);
I[6]=new Array();I[6][0]=100;
I[6][1]='';
I[6][2]='0';
I[6][3]=new Array();
I[6][3][0]=new Array('7 Bonjourle monde 7','',0,0,1);
I[6][3][1]=new Array('7 Bonjourle monde 8','La fonction Longueur renvoie le nombre de caract\u00E8res d\'une cha\u00EEne de caract\u00E8res pass\u00E9e en param\u00E8tre. La proc\u00E9dure Concat\u00E9ner affiche la somme des deux cha\u00EEnes de caract\u00E8res pass\u00E9es en param\u00E8tre. Les param\u00E8tres sont pass\u00E9s par valeur, donc les variables a et b ne sont pas modifi\u00E9es par les appels des sous-programmes. La variable a est une variable globale, donc elle est accessible depuis le programme principal et les sous-programmes. La variable b est une variable locale au programme principal, donc elle n\'est pas accessible depuis les sous-programmes. L\'affichage du programme est donc: Longueur(a) = Longueur("Bonjour") = 7 (car il y a 7 caract\u00E8res dans "Bonjour") Concat\u00E9ner(a,b) = Concat\u00E9ner("Bonjour","le monde") = afficher "Bonjour" + "le monde" = afficher "Bonjourle monde" (sans espace entre les deux cha\u00EEnes) a = b = a = "le monde" Longueur(a) = Longueur("le monde") = 8 (car il y a 8 caract\u00E8res dans "le monde")',1,100,1);
I[6][3][2]=new Array('7 Bonjour le monde 7','',0,0,1);
I[6][3][3]=new Array('7 Bonjour le monde 8','',0,0,1);
I[7]=new Array();I[7][0]=100;
I[7][1]='';
I[7][2]='0';
I[7][3]=new Array();
I[7][3][0]=new Array('1 24 10','La fonction Somme renvoie la somme des n premiers entiers naturels pass\u00E9s en param\u00E8tre. La proc\u00E9dure Factorielle affiche la factorielle du nombre pass\u00E9 en param\u00E8tre. Les param\u00E8tres sont pass\u00E9s par valeur, donc les variables k et m ne sont pas modifi\u00E9es par les appels des sous-programmes. La variable k est une variable globale, donc elle est accessible depuis le programme principal et les sous-programmes. La variable m est une variable locale au programme principal, donc elle n\'est pas accessible depuis les sous-programmes. L\'affichage du programme est donc: Somme(k) = Somme(1) = 1 (car la somme des entiers de 1 \u00E0 1 est \u00E9gale \u00E0 1) Factorielle(m) = Factorielle(4) = afficher 123*4 = afficher 24 (car la factorielle de 4 est \u00E9gale \u00E0 24) k = m = k = 4 Somme(k) = Somme(4) = 10 (car la somme des entiers de 1 \u00E0 4 est \u00E9gale \u00E0 10)',1,100,1);
I[7][3][1]=new Array('1 24 1','',0,0,1);
I[7][3][2]=new Array('4 24 10','',0,0,1);
I[7][3][3]=new Array('4 24 4','',0,0,1);
I[8]=new Array();I[8][0]=100;
I[8][1]='';
I[8][2]='0';
I[8][3]=new Array();
I[8][3][0]=new Array('Un param\u00E8tre utilis\u00E9 dans la d\u00E9finition d\'une fonction ou d\'une proc\u00E9dure.','',1,100,1);
I[8][3][1]=new Array('Un param\u00E8tre utilis\u00E9 lors de l\'appel d\'une fonction ou d\'une proc\u00E9dure.','',0,0,1);
I[8][3][2]=new Array('Un type de variable locale.','',0,0,1);
I[9]=new Array();I[9][0]=100;
I[9][1]='';
I[9][2]='0';
I[9][3]=new Array();
I[9][3][0]=new Array('Le passage d\'une copie de la valeur d\'un argument \u00E0 une fonction ou une proc\u00E9dure.','Le passage de param\u00E8tres par valeur signifie que l\'on passe une copie de la valeur d\'un argument \u00E0 une fonction ou une proc\u00E9dure.',1,100,1);
I[9][3][1]=new Array('Le passage d\'un pointeur vers l\'argument \u00E0 une fonction ou une proc\u00E9dure.','',0,0,1);
I[9][3][2]=new Array('Le passage d\'un alias de l\'argument \u00E0 une fonction ou une proc\u00E9dure.','',0,0,1);
I[10]=new Array();I[10][0]=100;
I[10][1]='';
I[10][2]='0';
I[10][3]=new Array();
I[10][3][0]=new Array('Une variable d\u00E9finie dans le corps d\'une fonction ou d\'une proc\u00E9dure.','Une variable locale est une variable d\u00E9finie dans le corps d\'une fonction ou d\'une proc\u00E9dure et qui n\'est accessible que dans ce contexte.',1,100,1);
I[10][3][1]=new Array('Une variable d\u00E9finie en dehors du corps d\'une fonction ou d\'une proc\u00E9dure.','',0,0,1);
I[10][3][2]=new Array('Une variable accessible uniquement dans le corps d\'une fonction ou d\'une proc\u00E9dure.','',0,0,1);
I[11]=new Array();I[11][0]=100;
I[11][1]='';
I[11][2]='0';
I[11][3]=new Array();
I[11][3][0]=new Array('6 5','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par valeur. Lorsque vous appelez la proc\u00E9dure afficher avec le param\u00E8tre effectif a, vous cr\u00E9ez une copie de la valeur de a dans le param\u00E8tre formel x. La modification de x dans la proc\u00E9dure n\'affecte pas la valeur de a dans le programme principal. Donc, la proc\u00E9dure affiche 6, mais la valeur de a reste 5.',1,100,1);
I[11][3][1]=new Array('6 6','',0,0,1);
I[11][3][2]=new Array('5 6','',0,0,1);
I[11][3][3]=new Array('5 5','',0,0,1);
I[12]=new Array();I[12][0]=100;
I[12][1]='';
I[12][2]='0';
I[12][3]=new Array();
I[12][3][0]=new Array('3','',0,0,1);
I[12][3][1]=new Array('6','',0,0,1);
I[12][3][2]=new Array('9','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par valeur et du retour des fonctions. Lorsque vous appelez la fonction carr\u00E9 avec le param\u00E8tre effectif a, vous cr\u00E9ez une copie de la valeur de a dans le param\u00E8tre formel x. La fonction retourne le carr\u00E9 de x, qui est affect\u00E9 \u00E0 la variable a dans le programme principal. Donc, la valeur de a devient 9 et c\'est ce qui est affich\u00E9.',1,100,1);
I[12][3][3]=new Array('12','',0,0,1);
I[13]=new Array();I[13][0]=100;
I[13][1]='';
I[13][2]='0';
I[13][3]=new Array();
I[13][3][0]=new Array('2 4','',0,0,1);
I[13][3][1]=new Array('4 2','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par r\u00E9f\u00E9rence. Lorsque vous appelez la proc\u00E9dure \u00E9changer avec les param\u00E8tres effectifs a et b, vous passez les adresses des variables a et b aux param\u00E8tres formels x et y. La modification de x et y dans la proc\u00E9dure affecte directement les valeurs de a et b dans le programme principal. Donc, la proc\u00E9dure \u00E9change les valeurs de a et b, et affiche 4 et 2.',1,100,1);
I[13][3][2]=new Array('2 2','',0,0,1);
I[13][3][3]=new Array('4 4','',0,0,1);
I[14]=new Array();I[14][0]=100;
I[14][1]='';
I[14][2]='0';
I[14][3]=new Array();
I[14][3][0]=new Array('1','',0,0,1);
I[14][3][1]=new Array('5','',0,0,1);
I[14][3][2]=new Array('24','',0,0,1);
I[14][3][3]=new Array('120',': Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par valeur et de la r\u00E9cursivit\u00E9 des fonctions. Lorsque vous appelez la fonction factorielle avec le param\u00E8tre effectif n, vous cr\u00E9ez une copie de la valeur de n dans le param\u00E8tre formel n. La fonction appelle elle-m\u00EAme avec des valeurs d\u00E9croissantes de n jusqu\'\u00E0 atteindre le cas de base n = 0. La fonction retourne alors le produit des valeurs successives de n, qui est le calcul de la factorielle. Donc, la fonction affiche la factorielle de 5, qui est 120.',1,100,1);
I[15]=new Array();I[15][0]=100;
I[15][1]='';
I[15][2]='0';
I[15][3]=new Array();
I[15][3][0]=new Array('0','',0,0,1);
I[15][3][1]=new Array('1','Cette question teste votre compr\u00E9hension de la notion de variable globale et de variable locale. La variable x est d\u00E9clar\u00E9e en dehors de toute proc\u00E9dure ou fonction, donc c\'est une variable globale. Elle est accessible et modifiable dans tout l\'algorithme, y compris dans la proc\u00E9dure incr\u00E9menter. Donc, la proc\u00E9dure incr\u00E9mente la valeur de x, qui passe de 0 \u00E0 1, et c\'est ce qui est affich\u00E9.',1,100,1);
I[15][3][2]=new Array('Erreur','',0,0,1);
I[15][3][3]=new Array('Rien','',0,0,1);
I[16]=new Array();I[16][0]=100;
I[16][1]='';
I[16][2]='0';
I[16][3]=new Array();
I[16][3][0]=new Array('6','',0,0,1);
I[16][3][1]=new Array('8','',0,0,1);
I[16][3][2]=new Array('9','',0,0,1);
I[16][3][3]=new Array('27','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par valeur et des boucles pour. Lorsque vous appelez la fonction puissance avec les param\u00E8tres effectifs a et b, vous cr\u00E9ez des copies des valeurs de a et b dans les param\u00E8tres formels x et n. La fonction calcule la puissance x^n en multipliant x par lui-m\u00EAme n fois dans une boucle pour. La fonction retourne le r\u00E9sultat, qui est affect\u00E9 \u00E0 la variable p dans le programme principal. Donc, la fonction affiche la puissance 2^3, qui est 27.',1,100,1);
I[17]=new Array();I[17][0]=100;
I[17][1]='';
I[17][2]='0';
I[17][3]=new Array();
I[17][3][0]=new Array('10 20 30 40 50','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres de type tableau. Lorsque vous appelez la proc\u00E9dure afficher_tab avec le param\u00E8tre effectif t, vous passez l\'adresse du premier \u00E9l\u00E9ment du tableau t au param\u00E8tre formel tab. La proc\u00E9dure parcourt le tableau tab dans une boucle pour et affiche ses \u00E9l\u00E9ments. Donc, la proc\u00E9dure affiche les \u00E9l\u00E9ments du tableau t, qui sont 10, 20, 30, 40 et 50.',1,100,1);
I[17][3][1]=new Array('Erreur: le tableau n\'est pas pass\u00E9 en param\u00E8tre par r\u00E9f\u00E9rence','',0,0,1);
I[17][3][2]=new Array('Erreur: le tableau n\'a pas de taille d\u00E9finie dans la proc\u00E9dure','',0,0,1);
I[17][3][3]=new Array('Rien','',0,0,1);
I[18]=new Array();I[18][0]=100;
I[18][1]='';
I[18][2]='0';
I[18][3]=new Array();
I[18][3][0]=new Array('5','',0,0,1);
I[18][3][1]=new Array('8','',0,0,1);
I[18][3][2]=new Array('10',': Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par valeur et de l\'appel de fonctions. Lorsque vous appelez la fonction somme avec les param\u00E8tres effectifs 2 et 3, vous cr\u00E9ez des copies des valeurs de 2 et 3 dans les param\u00E8tres formels x et y. La fonction retourne la somme de x et y, qui est affect\u00E9e \u00E0 la variable a dans le programme principal. Donc, la valeur de a devient 5. Ensuite, vous appelez \u00E0 nouveau la fonction somme avec les param\u00E8tres effectifs a et a, qui sont des copies de la valeur de a. La fonction retourne la somme de a et a, qui est affect\u00E9e \u00E0 la variable b dans le programme principal. Donc, la valeur de b devient 10 et c\'est ce qui est affich\u00E9.',1,100,1);
I[18][3][3]=new Array('Erreur: la fonction somme est appel\u00E9e deux fois','',0,0,1);
I[19]=new Array();I[19][0]=100;
I[19][1]='';
I[19][2]='0';
I[19][3]=new Array();
I[19][3][0]=new Array('2 3','',0,0,1);
I[19][3][1]=new Array('3 8','',0,0,1);
I[19][3][2]=new Array('4 9','',0,0,1);
I[19][3][3]=new Array('3 9','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par r\u00E9f\u00E9rence et de la modification des variables. Lorsque vous appelez la proc\u00E9dure modifier avec le param\u00E8tre effectif a, vous passez l\'adresse de la variable a au param\u00E8tre formel x. La proc\u00E9dure modifie la valeur de x, qui est la m\u00EAme que celle de a, en lui affectant le carr\u00E9 de x moins 1. Donc, la valeur de a devient 3. De m\u00EAme, lorsque vous appelez la proc\u00E9dure modifier avec le param\u00E8tre effectif b, vous passez l\'adresse de la variable b au param\u00E8tre formel x. La proc\u00E9dure modifie la valeur de x, qui est la m\u00EAme que celle de b, en lui affectant le carr\u00E9 de x moins 1. Donc, la valeur de b devient 9. Finalement, l\'algorithme affiche les valeurs de a et b, qui sont 3 et 9.',1,100,1);
I[20]=new Array();I[20][0]=100;
I[20][1]='';
I[20][2]='0';
I[20][3]=new Array();
I[20][3][0]=new Array('3','',0,0,1);
I[20][3][1]=new Array('4','',0,0,1);
I[20][3][2]=new Array('5','Cette question teste votre compr\u00E9hension du passage des param\u00E8tres par valeur et de la r\u00E9cursivit\u00E9 des fonctions. Lorsque vous appelez la fonction fibonacci avec le param\u00E8tre effectif k, vous cr\u00E9ez une copie de la valeur de k dans le param\u00E8tre formel n. La fonction appelle elle-m\u00EAme avec des valeurs d\u00E9croissantes de n jusqu\'\u00E0 atteindre les cas de base n = 0 ou n = 1. La fonction retourne alors la somme des valeurs successives de n, qui est le calcul de la suite de Fibonacci. Donc, la fonction affiche le cinqui\u00E8me terme de la suite de Fibonacci, qui est 5.',1,100,1);
I[20][3][3]=new Array('Erreur: la fonction fibonacci est r\u00E9cursive','',0,0,1);


function StartUp(){

//If there's only one question, no need for question navigation controls
	if (QsToShow < 2){
		document.getElementById('QNav').style.display = 'none';
	}
	
//Stash the instructions so they can be redisplayed
	strInstructions = document.getElementById('InstructionsDiv').innerHTML;
	

	

	

	
	CompleteEmptyFeedback();

	SetUpQuestions();
	ClearTextBoxes();
	CreateStatusArray();
	

	setTimeout('StartTimer()', 50);

	
//Check search string for q parameter
	if (document.location.search.length > 0){
		if (ShuffleQs == false){
			var JumpTo = parseInt(document.location.search.substring(1,document.location.search.length))-1;
			if (JumpTo <= QsToShow){
				ChangeQ(JumpTo);
			}
		}
	}
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
}

function ShowHideQuestions(){
	document.getElementById('ShowMethodButton').style.display = 'none';
	if (ShowingAllQuestions == false){
		for (var i=0; i<QArray.length; i++){
				QArray[i].style.display = '';
			}
		document.getElementById('Questions').style.listStyleType = 'decimal';
		document.getElementById('OneByOneReadout').style.display = 'none';
		document.getElementById('ShowMethodButton').innerHTML = ShowOneByOneCaption;
		ShowingAllQuestions = true;
	}
	else{
		for (var i=0; i<QArray.length; i++){
				if (i != CurrQNum){
					QArray[i].style.display = 'none';
				}
			}
		document.getElementById('Questions').style.listStyleType = 'none';
		document.getElementById('OneByOneReadout').style.display = '';
		document.getElementById('ShowMethodButton').innerHTML = ShowAllQuestionsCaption;
		ShowingAllQuestions = false;	
	}
	document.getElementById('ShowMethodButton').style.display = 'inline';
}

function CreateStatusArray(){
	var QNum, ANum;
//For each item in the item array
	for (QNum=0; QNum<I.length; QNum++){
//Check if the question still exists (hasn't been nuked by showing a random selection)
		if (document.getElementById('Q_' + QNum) != null){
			State[QNum] = new Array();
			State[QNum][0] = -1; //Score for this q; -1 shows question not done yet
			State[QNum][1] = new Array(); //answers
			for (ANum = 0; ANum<I[QNum][3].length; ANum++){
				State[QNum][1][ANum] = 0; //answer not chosen yet; when chosen, will store its position in the series of choices
			}
			State[QNum][2] = 0; //tries at this q so far
			State[QNum][3] = 0; //incrementing percent-correct values of selected answers
			State[QNum][4] = 0; //penalties incurred for hints
			State[QNum][5] = ''; //Sequence of answers chosen by number
		}
		else{
			State[QNum] = null;
		}
	}
}



function CheckMCAnswer(QNum, ANum, Btn){
//if question doesn't exist, bail
	if (State[QNum].length < 1){return;}
	
//Get the feedback
	Feedback = I[QNum][3][ANum][1];
	
//Now show feedback and bail if question already complete
	if (State[QNum][0] > -1){
//Add an extra message explaining that the question
// is finished if defined by the user
		if (strQuestionFinished.length > 0){Feedback += '<br />' + strQuestionFinished;}
//Show the feedback
		ShowMessage(Feedback);
//New for 6.2.2.1: If you want to mark an answer as correct even when it's the final choice, uncomment this line.
//		if (I[QNum][3][ANum][2] >= 1){Btn.innerHTML = CorrectIndicator;}else{Btn.innerHTML = IncorrectIndicator;}	
		return;
	}
	
//Hide the button while processing
	Btn.style.display = 'none';

//Increment the number of tries
	State[QNum][2]++;
	
//Add the percent-correct value of this answer
	State[QNum][3] += I[QNum][3][ANum][3];
	
//Store the try number in the answer part of the State array, for tracking purposes
	State[QNum][1][ANum] = State[QNum][2];
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	State[QNum][5] += String.fromCharCode(65+ANum);
	
//Should this answer be accepted as correct?
	if (I[QNum][3][ANum][2] < 1){
//It's wrong

//Mark the answer
		Btn.innerHTML = IncorrectIndicator;
		
//Remove any previous score unless exercise is finished (6.0.3.8+)
		if (Finished == false){
			WriteToInstructions(strInstructions);
		}	
		
//Check whether this leaves just one MC answer unselected, in which case the Q is terminated
		var RemainingAnswer = FinalAnswer(QNum);
		if (RemainingAnswer > -1){
//Behave as if the last answer had been selected, but give no credit for it
//Increment the number of tries
			State[QNum][2]++;		
		
//Calculate the score for this question
			CalculateMCQuestionScore(QNum);
			
//Get the overall score and add it to the feedback
			CalculateOverallScore();
//New for 6.2.2.1
			var QsDone = CheckQuestionsCompleted();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
		}
	}
	else{
//It's right
//Mark the answer
		Btn.innerHTML = CorrectIndicator;
				
//Calculate the score for this question
		CalculateMCQuestionScore(QNum);
		
//New for 6.2.2.0
		var QsDone = CheckQuestionsCompleted();

//Get the overall score and add it to the feedback
		if (ContinuousScoring == true){
			CalculateOverallScore();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
		}
		else{
			WriteToInstructions(QsDone);
		}
	}
	
//Show the button again
	Btn.style.display = 'inline';
	
//Finally, show the feedback	
	ShowMessage(Feedback);
	
//Check whether all questions are now done
	CheckFinished();
}

function CalculateMCQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties
	var PercentCorrect = State[QNum][3];
	var TotAns = GetTotalMCAnswers(QNum);
	var HintPenalties = State[QNum][4];
	
//Make sure it's not already complete

	if (State[QNum][0] < 0){
//Allow for Hybrids
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
//This line calculates the score for this question
			if (TotAns == 1){
				State[QNum][0] = 1;
			}
			else{
				State[QNum][0] = ((TotAns-((Tries*100)/State[QNum][3]))/(TotAns-1));
			}
		}
//Fix for Safari bug added for version 6.0.3.42 (negative infinity problem)
		if ((State[QNum][0] < 0)||(State[QNum][0] == Number.NEGATIVE_INFINITY)){
			State[QNum][0] = 0;
		}
	}
}

function GetTotalMCAnswers(QNum){
	var Result = 0;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			Result++;
		}
	}
	return Result;
}

function FinalAnswer(QNum){
	var UnchosenAnswers = 0;
	var FinalAnswer = -1;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			if (State[QNum][1][ANum] < 1){ //This answer hasn't been chosen yet
				UnchosenAnswers++;
				FinalAnswer = ANum;
			}
		}
	}
	if (UnchosenAnswers == 1){
		return FinalAnswer;
	}
	else{
		return -1;
	}
}





function CalculateOverallScore(){
	var TotalWeighting = 0;
	var TotalScore = 0;
	
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] > -1){
				TotalWeighting += I[QNum][0];
				TotalScore += (I[QNum][0] * State[QNum][0]);
			}
		}
	}
	if (TotalWeighting > 0){
		Score = Math.floor((TotalScore/TotalWeighting)*100);
	}
	else{
//if TotalWeighting is 0, no questions so far have any value, so 
//no penalty should be shown.
		Score = 100; 
	}
}

//New for 6.2.2.0
function CheckQuestionsCompleted(){
	if (ShowCompletedSoFar == false){return '';}
	var QsCompleted = 0;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] >= 0){
				QsCompleted++;
			}
		}
	}
//Fixes for 6.2.2.2
	if (QsCompleted >= QArray.length){
		return ExerciseCompleted;
	}
	else{
		return CompletedSoFar + ' ' + QsCompleted + '/' + QArray.length + '.';
	}
}

function CheckFinished(){
	var FB = '';
	var AllDone = true;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				AllDone = false;
			}
		}
	}
	if (AllDone == true){
	
//Report final score and submit if necessary
		CalculateOverallScore();
		FB = YourScoreIs + ' ' + Score + '%.';
		if (ShowCorrectFirstTime == true){
			var CFT = 0;
			for (QNum=0; QNum<State.length; QNum++){
				if (State[QNum] != null){
					if (State[QNum][0] >= 1){
						CFT++;
					}
				}
			}
			FB += '<br />' + CorrectFirstTime + ' ' + CFT + '/' + QsToShow;
		}
		
//New for 6.2.2.0
		FB += '<br />' + ExerciseCompleted;
		
		WriteToInstructions(FB);
		
		Finished == true;

		window.clearInterval(Interval);




		TimeOver = true;
		Locked = true;
		


		Finished = true;
		Detail = '<?xml version="1.0"?><hpnetresult><fields>';
		for (QNum=0; QNum<State.length; QNum++){
			if (State[QNum] != null){
				if (State[QNum][5].length > 0){
					Detail += '<field><fieldname>Question #' + (QNum+1) + '</fieldname><fieldtype>question-tracking</fieldtype><fieldlabel>Q ' + (QNum+1) + '</fieldlabel><fieldlabelid>QuestionTrackingField</fieldlabelid><fielddata>' + State[QNum][5] + '</fielddata></field>';
				}
			}
		}
		Detail += '</fields></hpnetresult>';
	}

}


function TimesUp(){
	document.getElementById('Timer').innerHTML = 'Your time is over!';

	TimeOver = true;
	Finished = true;
	ShowMessage('Your time is over!');
	
//Set all remaining scores to 0
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				State[QNum][0] = 0;
			}
		}
	}
	CheckFinished();
}








//CODE FOR HANDLING TIMER
//Timer code
var Seconds = 600;
var Interval = null;

function StartTimer(){
	Interval = window.setInterval('DownTime()',1000);
	document.getElementById('TimerText').style.display = 'inline';
}

function DownTime(){
	var ss = Seconds % 60;
	if (ss<10){
		ss='0' + ss + '';
	}

	var mm = Math.floor(Seconds / 60);

	if (document.getElementById('Timer') == null){
		return;
	}

	document.getElementById('TimerText').innerHTML = mm + ':' + ss;
	if (Seconds < 1){
		window.clearInterval(Interval);
		TimeOver = true;
		TimesUp();
	}
	Seconds--;
}






//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location='contents.htm'; return false;"> Index </button>



<button class="NavButton" onclick="location='nextpage.htm'; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">Algorithme - Python - Chap3: STRUCTURER UN ALGORITHME</h2>

	<h3 class="ExerciseSubtitle">niveau: difficile</h3>


<div id="Timer"><span id="TimerText">&#160;&#160;</span></div>


</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">Pour r&#x00E9;ussir le QCM, vous devez avoir au moins un score de 80%. Bonne chance! </div>
</div>


<div id="ContainerDiv">



<div class="ExerciseContainer">

<div id="QNav" class="QuestionNavigation">

<p style="text-align: right;">
<button id="ShowMethodButton" class="FuncButton" onclick="ShowHideQuestions(); return false;">Show all questions</button>
</p>

<div id="OneByOneReadout">
<button id="PrevQButton" class="FuncButton" onclick="ChangeQ(-1); return false;">&lt;=</button>

<span id="QNumReadout" class="QNum">&#160;</span>

<button id="NextQButton" class="FuncButton" onclick="ChangeQ(1); return false;">=&gt;</button>
<br />
</div>

</div>
 
<ol class="QuizQuestions" id="Questions">
<li class="QuizQuestion" id="Q_0" style="display: none;"><div class="QuestionText">Quelle est la diff&#x00E9;rence entre une proc&#x00E9;dure et une fonction?</div><ol class="MCAnswers"><li id="Q_0_0"><button class="FuncButton" id="Q_0_0_Btn" onclick="CheckMCAnswer(0,0,this)">?</button>&#160;&#160;Une proc&#x00E9;dure ne renvoie pas de valeur, alors qu'une fonction renvoie une valeur.</li><li id="Q_0_1"><button class="FuncButton" id="Q_0_1_Btn" onclick="CheckMCAnswer(0,1,this)">?</button>&#160;&#160;Une proc&#x00E9;dure renvoie une valeur, alors qu'une fonction ne renvoie pas de valeur.</li><li id="Q_0_2"><button class="FuncButton" id="Q_0_2_Btn" onclick="CheckMCAnswer(0,2,this)">?</button>&#160;&#160;Une proc&#x00E9;dure et une fonction sont synonymes.</li><li id="Q_0_3"><button class="FuncButton" id="Q_0_3_Btn" onclick="CheckMCAnswer(0,3,this)">?</button>&#160;&#160;Une proc&#x00E9;dure est un ensemble d'instructions, alors qu'une fonction est un ensemble de donn&#x00E9;es.</li></ol></li>
<li class="QuizQuestion" id="Q_1" style="display: none;"><div class="QuestionText">Quelle est la diff&#x00E9;rence entre un param&#x00E8;tre formel et un param&#x00E8;tre effectif?</div><ol class="MCAnswers"><li id="Q_1_0"><button class="FuncButton" id="Q_1_0_Btn" onclick="CheckMCAnswer(1,0,this)">?</button>&#160;&#160;Un param&#x00E8;tre formel est le nom donn&#x00E9; &#x00E0; un param&#x00E8;tre dans la d&#x00E9;finition d'un sous-programme, alors qu'un param&#x00E8;tre effectif est la valeur ou la variable pass&#x00E9;e &#x00E0; un sous-programme lors de son appel.</li><li id="Q_1_1"><button class="FuncButton" id="Q_1_1_Btn" onclick="CheckMCAnswer(1,1,this)">?</button>&#160;&#160;Un param&#x00E8;tre formel est la valeur ou la variable pass&#x00E9;e &#x00E0; un sous-programme lors de son appel, alors qu'un param&#x00E8;tre effectif est le nom donn&#x00E9; &#x00E0; un param&#x00E8;tre dans la d&#x00E9;finition d'un sous-programme.</li><li id="Q_1_2"><button class="FuncButton" id="Q_1_2_Btn" onclick="CheckMCAnswer(1,2,this)">?</button>&#160;&#160;Un param&#x00E8;tre formel et un param&#x00E8;tre effectif sont synonymes.</li><li id="Q_1_3"><button class="FuncButton" id="Q_1_3_Btn" onclick="CheckMCAnswer(1,3,this)">?</button>&#160;&#160;Un param&#x00E8;tre formel est le type d'un param&#x00E8;tre, alors qu'un param&#x00E8;tre effectif est le nom d'un param&#x00E8;tre.</li></ol></li>
<li class="QuizQuestion" id="Q_2" style="display: none;"><div class="QuestionText">Quels sont les deux types de passage des param&#x00E8;tres?</div><ol class="MCAnswers"><li id="Q_2_0"><button class="FuncButton" id="Q_2_0_Btn" onclick="CheckMCAnswer(2,0,this)">?</button>&#160;&#160;Par valeur et par r&#x00E9;f&#x00E9;rence.</li><li id="Q_2_1"><button class="FuncButton" id="Q_2_1_Btn" onclick="CheckMCAnswer(2,1,this)">?</button>&#160;&#160;Par nom et par type.</li><li id="Q_2_2"><button class="FuncButton" id="Q_2_2_Btn" onclick="CheckMCAnswer(2,2,this)">?</button>&#160;&#160;Par copie et par partage.</li><li id="Q_2_3"><button class="FuncButton" id="Q_2_3_Btn" onclick="CheckMCAnswer(2,3,this)">?</button>&#160;&#160;Par ordre et par choix.</li></ol></li>
<li class="QuizQuestion" id="Q_3" style="display: none;"><div class="QuestionText">Quelle est la diff&#x00E9;rence entre une variable locale et une variable globale?</div><ol class="MCAnswers"><li id="Q_3_0"><button class="FuncButton" id="Q_3_0_Btn" onclick="CheckMCAnswer(3,0,this)">?</button>&#160;&#160;Une variable locale est d&#x00E9;clar&#x00E9;e dans le corps d'un sous-programme, alors qu'une variable globale est d&#x00E9;clar&#x00E9;e en dehors de tout sous-programme.</li><li id="Q_3_1"><button class="FuncButton" id="Q_3_1_Btn" onclick="CheckMCAnswer(3,1,this)">?</button>&#160;&#160;Une variable locale est d&#x00E9;clar&#x00E9;e en dehors de tout sous-programme, alors qu'une variable globale est d&#x00E9;clar&#x00E9;e dans le corps d'un sous-programme.</li><li id="Q_3_2"><button class="FuncButton" id="Q_3_2_Btn" onclick="CheckMCAnswer(3,2,this)">?</button>&#160;&#160;Une variable locale et une variable globale sont synonymes.</li><li id="Q_3_3"><button class="FuncButton" id="Q_3_3_Btn" onclick="CheckMCAnswer(3,3,this)">?</button>&#160;&#160;Une variable locale est d&#x00E9;clar&#x00E9;e avec le mot-cl&#x00E9; local, alors qu'une variable globale est d&#x00E9;clar&#x00E9;e avec le mot-cl&#x00E9; global.</li></ol></li>
<li class="QuizQuestion" id="Q_4" style="display: none;"><div class="QuestionText">Quel sera l'affichage du programme suivant?<br />[pseudo]<br />// D&#x00E9;claration d'une variable globale<br />var n = 5<br />// D&#x00E9;finition d'une fonction qui renvoie le double d'un nombre<br />fonction Double(x)<br /> retourner 2*x<br />fin fonction<br />// D&#x00E9;finition d'une proc&#x00E9;dure qui affiche le carr&#x00E9; d'un nombre<br />proc&#x00E9;dure Carr&#x00E9;(x)<br /> afficher x*x<br />fin proc&#x00E9;dure<br />// Programme principal<br />var m = 10<br />afficher Double(n) // Affiche le double de n<br />Carr&#x00E9;(m) // Affiche le carr&#x00E9; de m<br />n = m // Affecte la valeur de m &#x00E0; n<br />afficher Double(n) // Affiche le double de n<br /></div><ol class="MCAnswers"><li id="Q_4_0"><button class="FuncButton" id="Q_4_0_Btn" onclick="CheckMCAnswer(4,0,this)">?</button>&#160;&#160;10 100 20</li><li id="Q_4_1"><button class="FuncButton" id="Q_4_1_Btn" onclick="CheckMCAnswer(4,1,this)">?</button>&#160;&#160;10 100 10</li><li id="Q_4_2"><button class="FuncButton" id="Q_4_2_Btn" onclick="CheckMCAnswer(4,2,this)">?</button>&#160;&#160;5 25 10</li><li id="Q_4_3"><button class="FuncButton" id="Q_4_3_Btn" onclick="CheckMCAnswer(4,3,this)">?</button>&#160;&#160;5 25 20</li></ol></li>
<li class="QuizQuestion" id="Q_5" style="display: none;"><div class="QuestionText">Quel sera l'affichage du programme suivant?<br />[pseudo]<br />// D&#x00E9;claration d'une variable globale<br />var x = 2<br />// D&#x00E9;finition d'une fonction qui renvoie le cube d'un nombre<br />fonction Cube(y)<br /> retourner y*y*y<br />fin fonction<br />// D&#x00E9;finition d'une proc&#x00E9;dure qui affiche le produit de deux nombres<br />proc&#x00E9;dure Produit(a,b)<br /> afficher a*b<br />fin proc&#x00E9;dure<br />// Programme principal<br />var z = 3<br />afficher Cube(x) // Affiche le cube de x<br />Produit(x,z) // Affiche le produit de x et z<br />x = Cube(z) // Affecte le cube de z &#x00E0; x<br />afficher x // Affiche x<br /></div><ol class="MCAnswers"><li id="Q_5_0"><button class="FuncButton" id="Q_5_0_Btn" onclick="CheckMCAnswer(5,0,this)">?</button>&#160;&#160;8 6 27</li><li id="Q_5_1"><button class="FuncButton" id="Q_5_1_Btn" onclick="CheckMCAnswer(5,1,this)">?</button>&#160;&#160;8 6 8</li><li id="Q_5_2"><button class="FuncButton" id="Q_5_2_Btn" onclick="CheckMCAnswer(5,2,this)">?</button>&#160;&#160;2 9 27</li><li id="Q_5_3"><button class="FuncButton" id="Q_5_3_Btn" onclick="CheckMCAnswer(5,3,this)">?</button>&#160;&#160;2 9 8</li></ol></li>
<li class="QuizQuestion" id="Q_6" style="display: none;"><div class="QuestionText">Quel sera l'affichage du programme suivant?<br />[pseudo]<br />// D&#x00E9;claration d'une variable globale<br />var a = "Bonjour"<br />// D&#x00E9;finition d'une fonction qui renvoie la longueur d'une cha&#x00EE;ne de caract&#x00E8;res<br />fonction Longueur(s)<br /> var n = 0 // Variable locale qui compte le nombre de caract&#x00E8;res<br /> tant que s[n] existe // Tant qu'on n'a pas atteint la fin de la cha&#x00EE;ne<br /> n = n + 1 // On incr&#x00E9;mente le compteur<br /> fin tant que<br /> retourner n // On renvoie le compteur<br />fin fonction<br />// D&#x00E9;finition d'une proc&#x00E9;dure qui affiche la concat&#x00E9;nation de deux cha&#x00EE;nes de caract&#x00E8;res<br />proc&#x00E9;dure Concat&#x00E9;ner(s,t)<br /> afficher s + t // On affiche la somme des deux cha&#x00EE;nes<br />fin proc&#x00E9;dure<br />// Programme principal<br />var b = "le monde"<br />afficher Longueur(a) // Affiche la longueur de a<br />Concat&#x00E9;ner(a,b) // Affiche la concat&#x00E9;nation de a et b<br />a = b // Affecte la valeur de b &#x00E0; a<br />afficher Longueur(a) // Affiche la longueur de a<br /></div><ol class="MCAnswers"><li id="Q_6_0"><button class="FuncButton" id="Q_6_0_Btn" onclick="CheckMCAnswer(6,0,this)">?</button>&#160;&#160;7 Bonjourle monde 7</li><li id="Q_6_1"><button class="FuncButton" id="Q_6_1_Btn" onclick="CheckMCAnswer(6,1,this)">?</button>&#160;&#160;7 Bonjourle monde 8</li><li id="Q_6_2"><button class="FuncButton" id="Q_6_2_Btn" onclick="CheckMCAnswer(6,2,this)">?</button>&#160;&#160;7 Bonjour le monde 7</li><li id="Q_6_3"><button class="FuncButton" id="Q_6_3_Btn" onclick="CheckMCAnswer(6,3,this)">?</button>&#160;&#160;7 Bonjour le monde 8</li></ol></li>
<li class="QuizQuestion" id="Q_7" style="display: none;"><div class="QuestionText">Quel sera l'affichage du programme suivant?<br />[pseudo]<br />// D&#x00E9;claration d'une variable globale<br />var k = 1<br /><br />// D&#x00E9;finition d'une fonction qui renvoie la somme des n premiers entiers naturels<br />fonction Somme(n)<br /> var s = 0 // Variable locale qui accumule la somme<br /> pour i allant de 1 &#x00E0; n // On parcourt les entiers de 1 &#x00E0; n<br /> s = s + i // On ajoute i &#x00E0; la somme<br /> fin pour<br /> retourner s // On renvoie la somme<br />fin fonction<br /><br />// D&#x00E9;finition d'une proc&#x00E9;dure qui affiche la factorielle d'un nombre<br />proc&#x00E9;dure Factorielle(n)<br /> var f = 1 // Variable locale qui calcule la factorielle<br /> pour i allant de 1 &#x00E0; n // On parcourt les entiers de 1 &#x00E0; n<br /> f = f * i // On multiplie f par i<br /> fin pour<br /> afficher f // On affiche la factorielle<br />fin proc&#x00E9;dure<br /><br />// Programme principal<br />var m = 4<br />afficher Somme(k) // Affiche la somme des k premiers entiers naturels<br />Factorielle(m) // Affiche la factorielle de m<br />k = m // Affecte la valeur de m &#x00E0; k<br />afficher Somme(k) // Affiche la somme des k premiers entiers naturels<br /></div><ol class="MCAnswers"><li id="Q_7_0"><button class="FuncButton" id="Q_7_0_Btn" onclick="CheckMCAnswer(7,0,this)">?</button>&#160;&#160;1 24 10</li><li id="Q_7_1"><button class="FuncButton" id="Q_7_1_Btn" onclick="CheckMCAnswer(7,1,this)">?</button>&#160;&#160;1 24 1</li><li id="Q_7_2"><button class="FuncButton" id="Q_7_2_Btn" onclick="CheckMCAnswer(7,2,this)">?</button>&#160;&#160;4 24 10</li><li id="Q_7_3"><button class="FuncButton" id="Q_7_3_Btn" onclick="CheckMCAnswer(7,3,this)">?</button>&#160;&#160;4 24 4</li></ol></li>
<li class="QuizQuestion" id="Q_8" style="display: none;"><div class="QuestionText">Qu'est-ce qu'un param&#x00E8;tre formel?</div><ol class="MCAnswers"><li id="Q_8_0"><button class="FuncButton" id="Q_8_0_Btn" onclick="CheckMCAnswer(8,0,this)">?</button>&#160;&#160;Un param&#x00E8;tre utilis&#x00E9; dans la d&#x00E9;finition d'une fonction ou d'une proc&#x00E9;dure.</li><li id="Q_8_1"><button class="FuncButton" id="Q_8_1_Btn" onclick="CheckMCAnswer(8,1,this)">?</button>&#160;&#160;Un param&#x00E8;tre utilis&#x00E9; lors de l'appel d'une fonction ou d'une proc&#x00E9;dure.</li><li id="Q_8_2"><button class="FuncButton" id="Q_8_2_Btn" onclick="CheckMCAnswer(8,2,this)">?</button>&#160;&#160;Un type de variable locale.</li></ol></li>
<li class="QuizQuestion" id="Q_9" style="display: none;"><div class="QuestionText">Qu'est-ce qu'un passage de param&#x00E8;tres par valeur?</div><ol class="MCAnswers"><li id="Q_9_0"><button class="FuncButton" id="Q_9_0_Btn" onclick="CheckMCAnswer(9,0,this)">?</button>&#160;&#160;Le passage d'une copie de la valeur d'un argument &#x00E0; une fonction ou une proc&#x00E9;dure.</li><li id="Q_9_1"><button class="FuncButton" id="Q_9_1_Btn" onclick="CheckMCAnswer(9,1,this)">?</button>&#160;&#160;Le passage d'un pointeur vers l'argument &#x00E0; une fonction ou une proc&#x00E9;dure.</li><li id="Q_9_2"><button class="FuncButton" id="Q_9_2_Btn" onclick="CheckMCAnswer(9,2,this)">?</button>&#160;&#160;Le passage d'un alias de l'argument &#x00E0; une fonction ou une proc&#x00E9;dure.</li></ol></li>
<li class="QuizQuestion" id="Q_10" style="display: none;"><div class="QuestionText">Qu'est-ce qu'une variable locale?</div><ol class="MCAnswers"><li id="Q_10_0"><button class="FuncButton" id="Q_10_0_Btn" onclick="CheckMCAnswer(10,0,this)">?</button>&#160;&#160;Une variable d&#x00E9;finie dans le corps d'une fonction ou d'une proc&#x00E9;dure.</li><li id="Q_10_1"><button class="FuncButton" id="Q_10_1_Btn" onclick="CheckMCAnswer(10,1,this)">?</button>&#160;&#160;Une variable d&#x00E9;finie en dehors du corps d'une fonction ou d'une proc&#x00E9;dure.</li><li id="Q_10_2"><button class="FuncButton" id="Q_10_2_Btn" onclick="CheckMCAnswer(10,2,this)">?</button>&#160;&#160;Une variable accessible uniquement dans le corps d'une fonction ou d'une proc&#x00E9;dure.</li></ol></li>
<li class="QuizQuestion" id="Q_11" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />proc&#x00E9;dure afficher(x : entier)<br /> x &#x2190; x + 1<br /> &#x00E9;crire(x)<br />fin proc&#x00E9;dure<br /><br />var a : entier<br />a &#x2190; 5<br />afficher(a)<br />&#x00E9;crire(a)<br /></div><ol class="MCAnswers"><li id="Q_11_0"><button class="FuncButton" id="Q_11_0_Btn" onclick="CheckMCAnswer(11,0,this)">?</button>&#160;&#160;6 5</li><li id="Q_11_1"><button class="FuncButton" id="Q_11_1_Btn" onclick="CheckMCAnswer(11,1,this)">?</button>&#160;&#160;6 6</li><li id="Q_11_2"><button class="FuncButton" id="Q_11_2_Btn" onclick="CheckMCAnswer(11,2,this)">?</button>&#160;&#160;5 6</li><li id="Q_11_3"><button class="FuncButton" id="Q_11_3_Btn" onclick="CheckMCAnswer(11,3,this)">?</button>&#160;&#160;5 5</li></ol></li>
<li class="QuizQuestion" id="Q_12" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />fonction carr&#x00E9;(x : entier) : entier<br /> retourner x * x<br />fin fonction<br /><br />var a : entier<br />a &#x2190; 3<br />a &#x2190; carr&#x00E9;(a)<br />&#x00E9;crire(a)<br /></div><ol class="MCAnswers"><li id="Q_12_0"><button class="FuncButton" id="Q_12_0_Btn" onclick="CheckMCAnswer(12,0,this)">?</button>&#160;&#160;3</li><li id="Q_12_1"><button class="FuncButton" id="Q_12_1_Btn" onclick="CheckMCAnswer(12,1,this)">?</button>&#160;&#160;6</li><li id="Q_12_2"><button class="FuncButton" id="Q_12_2_Btn" onclick="CheckMCAnswer(12,2,this)">?</button>&#160;&#160;9</li><li id="Q_12_3"><button class="FuncButton" id="Q_12_3_Btn" onclick="CheckMCAnswer(12,3,this)">?</button>&#160;&#160;12</li></ol></li>
<li class="QuizQuestion" id="Q_13" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />proc&#x00E9;dure &#x00E9;changer(var x : entier, var y : entier)<br /> var temp : entier<br /> temp &#x2190; x<br /> x &#x2190; y<br /> y &#x2190; temp<br />fin proc&#x00E9;dure<br /><br />var a : entier<br />var b : entier<br />a &#x2190; 2<br />b &#x2190; 4<br />&#x00E9;changer(a, b)<br />&#x00E9;crire(a, b)<br /></div><ol class="MCAnswers"><li id="Q_13_0"><button class="FuncButton" id="Q_13_0_Btn" onclick="CheckMCAnswer(13,0,this)">?</button>&#160;&#160;2 4</li><li id="Q_13_1"><button class="FuncButton" id="Q_13_1_Btn" onclick="CheckMCAnswer(13,1,this)">?</button>&#160;&#160;4 2</li><li id="Q_13_2"><button class="FuncButton" id="Q_13_2_Btn" onclick="CheckMCAnswer(13,2,this)">?</button>&#160;&#160;2 2</li><li id="Q_13_3"><button class="FuncButton" id="Q_13_3_Btn" onclick="CheckMCAnswer(13,3,this)">?</button>&#160;&#160;4 4</li></ol></li>
<li class="QuizQuestion" id="Q_14" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />var n : entier<br /><br />fonction factorielle(n : entier) : entier<br /> si n = 0 alors<br /> retourner 1<br /> sinon<br /> retourner n * factorielle(n - 1)<br /> fin si<br />fin fonction<br /><br />n &#x2190; 5<br />&#x00E9;crire(factorielle(n))<br /></div><ol class="MCAnswers"><li id="Q_14_0"><button class="FuncButton" id="Q_14_0_Btn" onclick="CheckMCAnswer(14,0,this)">?</button>&#160;&#160;1</li><li id="Q_14_1"><button class="FuncButton" id="Q_14_1_Btn" onclick="CheckMCAnswer(14,1,this)">?</button>&#160;&#160;5</li><li id="Q_14_2"><button class="FuncButton" id="Q_14_2_Btn" onclick="CheckMCAnswer(14,2,this)">?</button>&#160;&#160;24</li><li id="Q_14_3"><button class="FuncButton" id="Q_14_3_Btn" onclick="CheckMCAnswer(14,3,this)">?</button>&#160;&#160;120</li></ol></li>
<li class="QuizQuestion" id="Q_15" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />var x : entier<br /><br />proc&#x00E9;dure incr&#x00E9;menter()<br /> x &#x2190; x + 1<br />fin proc&#x00E9;dure<br /><br />x &#x2190; 0<br />incr&#x00E9;menter()<br />&#x00E9;crire(x)<br /></div><ol class="MCAnswers"><li id="Q_15_0"><button class="FuncButton" id="Q_15_0_Btn" onclick="CheckMCAnswer(15,0,this)">?</button>&#160;&#160;0</li><li id="Q_15_1"><button class="FuncButton" id="Q_15_1_Btn" onclick="CheckMCAnswer(15,1,this)">?</button>&#160;&#160;1</li><li id="Q_15_2"><button class="FuncButton" id="Q_15_2_Btn" onclick="CheckMCAnswer(15,2,this)">?</button>&#160;&#160;Erreur</li><li id="Q_15_3"><button class="FuncButton" id="Q_15_3_Btn" onclick="CheckMCAnswer(15,3,this)">?</button>&#160;&#160;Rien</li></ol></li>
<li class="QuizQuestion" id="Q_16" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />fonction puissance(x : entier, n : entier) : entier<br /> var p : entier<br /> p &#x2190; 1<br /> pour i de 1 &#x00E0; n faire<br /> p &#x2190; p * x<br /> fin pour<br /> retourner p<br />fin fonction<br /><br />var a : entier<br />var b : entier<br />a &#x2190; 2<br />b &#x2190; 3<br />&#x00E9;crire(puissance(a, b))<br /></div><ol class="MCAnswers"><li id="Q_16_0"><button class="FuncButton" id="Q_16_0_Btn" onclick="CheckMCAnswer(16,0,this)">?</button>&#160;&#160;6</li><li id="Q_16_1"><button class="FuncButton" id="Q_16_1_Btn" onclick="CheckMCAnswer(16,1,this)">?</button>&#160;&#160;8</li><li id="Q_16_2"><button class="FuncButton" id="Q_16_2_Btn" onclick="CheckMCAnswer(16,2,this)">?</button>&#160;&#160;9</li><li id="Q_16_3"><button class="FuncButton" id="Q_16_3_Btn" onclick="CheckMCAnswer(16,3,this)">?</button>&#160;&#160;27</li></ol></li>
<li class="QuizQuestion" id="Q_17" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />proc&#x00E9;dure afficher_tab(tab : tableau[1..5] d'entiers)<br /> pour i de 1 &#x00E0; 5 faire<br /> &#x00E9;crire(tab[i])<br /> fin pour<br />fin proc&#x00E9;dure<br /><br />var t : tableau[1..5] d'entiers<br />t[1] &#x2190; 10<br />t[2] &#x2190; 20<br />t[3] &#x2190; 30<br />t[4] &#x2190; 40<br />t[5] &#x2190; 50<br />afficher_tab(t)<br /></div><ol class="MCAnswers"><li id="Q_17_0"><button class="FuncButton" id="Q_17_0_Btn" onclick="CheckMCAnswer(17,0,this)">?</button>&#160;&#160;10 20 30 40 50</li><li id="Q_17_1"><button class="FuncButton" id="Q_17_1_Btn" onclick="CheckMCAnswer(17,1,this)">?</button>&#160;&#160;Erreur: le tableau n'est pas pass&#x00E9; en param&#x00E8;tre par r&#x00E9;f&#x00E9;rence</li><li id="Q_17_2"><button class="FuncButton" id="Q_17_2_Btn" onclick="CheckMCAnswer(17,2,this)">?</button>&#160;&#160;Erreur: le tableau n'a pas de taille d&#x00E9;finie dans la proc&#x00E9;dure</li><li id="Q_17_3"><button class="FuncButton" id="Q_17_3_Btn" onclick="CheckMCAnswer(17,3,this)">?</button>&#160;&#160;Rien</li></ol></li>
<li class="QuizQuestion" id="Q_18" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />fonction somme(x : entier, y : entier) : entier<br /> retourner x + y<br />fin fonction<br /><br />var a : entier<br />var b : entier<br />a &#x2190; somme(2, 3)<br />b &#x2190; somme(a, a)<br />&#x00E9;crire(b)<br /></div><ol class="MCAnswers"><li id="Q_18_0"><button class="FuncButton" id="Q_18_0_Btn" onclick="CheckMCAnswer(18,0,this)">?</button>&#160;&#160;5</li><li id="Q_18_1"><button class="FuncButton" id="Q_18_1_Btn" onclick="CheckMCAnswer(18,1,this)">?</button>&#160;&#160;8</li><li id="Q_18_2"><button class="FuncButton" id="Q_18_2_Btn" onclick="CheckMCAnswer(18,2,this)">?</button>&#160;&#160;10</li><li id="Q_18_3"><button class="FuncButton" id="Q_18_3_Btn" onclick="CheckMCAnswer(18,3,this)">?</button>&#160;&#160;Erreur: la fonction somme est appel&#x00E9;e deux fois</li></ol></li>
<li class="QuizQuestion" id="Q_19" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />proc&#x00E9;dure modifier(var x : entier)<br /> x &#x2190; x * x - 1<br />fin proc&#x00E9;dure<br /><br />var a : entier<br />var b : entier<br />a &#x2190; 2<br />b &#x2190; 3<br />modifier(a)<br />modifier(b)<br />&#x00E9;crire(a, b)<br /></div><ol class="MCAnswers"><li id="Q_19_0"><button class="FuncButton" id="Q_19_0_Btn" onclick="CheckMCAnswer(19,0,this)">?</button>&#160;&#160;2 3</li><li id="Q_19_1"><button class="FuncButton" id="Q_19_1_Btn" onclick="CheckMCAnswer(19,1,this)">?</button>&#160;&#160;3 8</li><li id="Q_19_2"><button class="FuncButton" id="Q_19_2_Btn" onclick="CheckMCAnswer(19,2,this)">?</button>&#160;&#160;4 9</li><li id="Q_19_3"><button class="FuncButton" id="Q_19_3_Btn" onclick="CheckMCAnswer(19,3,this)">?</button>&#160;&#160;3 9</li></ol></li>
<li class="QuizQuestion" id="Q_20" style="display: none;"><div class="QuestionText">Quel est le r&#x00E9;sultat affich&#x00E9; par l'algorithme suivant?<br /><br />[pseudo]<br />fonction fibonacci(n : entier) : entier<br /> si n = 0 ou n = 1 alors<br /> retourner n<br /> sinon<br /> retourner fibonacci(n - 1) + fibonacci(n - 2)<br /> fin si<br />fin fonction<br /><br />var k : entier<br />k &#x2190; 5<br />&#x00E9;crire(fibonacci(k))<br /></div><ol class="MCAnswers"><li id="Q_20_0"><button class="FuncButton" id="Q_20_0_Btn" onclick="CheckMCAnswer(20,0,this)">?</button>&#160;&#160;3</li><li id="Q_20_1"><button class="FuncButton" id="Q_20_1_Btn" onclick="CheckMCAnswer(20,1,this)">?</button>&#160;&#160;4</li><li id="Q_20_2"><button class="FuncButton" id="Q_20_2_Btn" onclick="CheckMCAnswer(20,2,this)">?</button>&#160;&#160;5</li><li id="Q_20_3"><button class="FuncButton" id="Q_20_3_Btn" onclick="CheckMCAnswer(20,3,this)">?</button>&#160;&#160;Erreur: la fonction fibonacci est r&#x00E9;cursive</li></ol></li></ol>



</div>

</div>

<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onclick="HideFeedback(); return false;">&#160;OK&#160;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location='contents.htm'; return false;"> Index </button>



<button class="NavButton" onclick="location='nextpage.htm'; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
