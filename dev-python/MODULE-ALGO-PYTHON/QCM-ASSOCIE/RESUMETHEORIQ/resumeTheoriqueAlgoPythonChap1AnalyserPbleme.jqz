<?xml version="1.0" encoding="ISO-8859-1"?>

<hotpot-jquiz-file>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <rdf:Description rdf:about="">
    <dc:creator>YB SOW</dc:creator>
    <dc:title>Algorithme - Python - Chap1: ANALYSER UN PROBL&amp;#x00C8;ME</dc:title>
  </rdf:Description>
</rdf:RDF><version>7</version>

<data>
<title>Algorithme - Python - Chap1: ANALYSER UN PROBL&amp;#x00C8;ME</title>

<timer><seconds>600</seconds><include-timer>1</include-timer></timer>

<reading>
<include-reading>0</include-reading>
<reading-title></reading-title>
<reading-text></reading-text>

</reading>

<questions><question-record><question>Quelle est la premi&amp;#x00E8;re &amp;#x00E9;tape du processus de r&amp;#x00E9;solution d&amp;#x2019;un probl&amp;#x00E8;me ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>R&amp;#x00E9;solution du probl&amp;#x00E8;me (conception et r&amp;#x00E9;alisation de la solution)</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Evaluation de la solution</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Analyse du probl&amp;#x00E8;me</text><feedback>L&amp;#x2019;analyse du probl&amp;#x00E8;me consiste &amp;#x00E0; bien comprendre l&amp;#x2019;&amp;#x00E9;nonc&amp;#x00E9; du probl&amp;#x00E8;me, &amp;#x00E0; d&amp;#x00E9;terminer les dimensions du probl&amp;#x00E8;me (entr&amp;#x00E9;es et sorties), &amp;#x00E0; d&amp;#x00E9;terminer la m&amp;#x00E9;thode de sa r&amp;#x00E9;solution par d&amp;#x00E9;composition et raffinements successifs, et &amp;#x00E0; d&amp;#x00E9;terminer les formules de calculs, les r&amp;#x00E8;gles de gestion, etc. C&amp;#x2019;est la premi&amp;#x00E8;re &amp;#x00E9;tape cruciale du processus de mod&amp;#x00E9;lisation d&amp;#x2019;un probl&amp;#x00E8;me.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Impl&amp;#x00E9;mentation du programme</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la diff&amp;#x00E9;rence entre un algorithme et un programme informatique ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Un algorithme est une description sch&amp;#x00E9;matique d&amp;#x2019;un probl&amp;#x00E8;me, tandis qu&amp;#x2019;un programme informatique est une description textuelle d&amp;#x2019;un probl&amp;#x00E8;me.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un algorithme est une description textuelle d&amp;#x2019;un probl&amp;#x00E8;me, tandis qu&amp;#x2019;un programme informatique est une description sch&amp;#x00E9;matique d&amp;#x2019;un probl&amp;#x00E8;me.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un algorithme est une solution &amp;#x00E0; un probl&amp;#x00E8;me sous la forme d&amp;#x2019;un encha&amp;#x00EE;nement d&amp;#x2019;op&amp;#x00E9;rations &amp;#x00E0; effectuer, tandis qu&amp;#x2019;un programme informatique est une impl&amp;#x00E9;mentation de cet algorithme dans un langage de programmation sp&amp;#x00E9;cifique.</text><feedback>Un algorithme peut &amp;#x00EA;tre &amp;#x00E9;crit en langage naturel, en pseudocode ou en organigramme, mais il n&amp;#x2019;est pas li&amp;#x00E9; &amp;#x00E0; un langage de programmation particulier. Un programme informatique est une traduction de l&amp;#x2019;algorithme dans un langage compr&amp;#x00E9;hensible par l&amp;#x2019;ordinateur, comme Python, Java ou C++.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un algorithme est une impl&amp;#x00E9;mentation d&amp;#x2019;un programme informatique dans un langage de programmation sp&amp;#x00E9;cifique, tandis qu&amp;#x2019;un programme informatique est une solution &amp;#x00E0; un probl&amp;#x00E8;me sous la forme d&amp;#x2019;un encha&amp;#x00EE;nement d&amp;#x2019;op&amp;#x00E9;rations &amp;#x00E0; effectuer.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quels sont les trois types de traitement des donn&amp;#x00E9;es en algorithmique ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>S&amp;#x00E9;quentiel, conditionnel et it&amp;#x00E9;ratif</text><feedback>Le traitement s&amp;#x00E9;quentiel consiste &amp;#x00E0; ex&amp;#x00E9;cuter les instructions les unes apr&amp;#x00E8;s les autres dans l&amp;#x2019;ordre donn&amp;#x00E9;. Le traitement conditionnel consiste &amp;#x00E0; ex&amp;#x00E9;cuter des instructions diff&amp;#x00E9;rentes selon qu&amp;#x2019;une condition est vraie ou fausse. Le traitement it&amp;#x00E9;ratif consiste &amp;#x00E0; r&amp;#x00E9;p&amp;#x00E9;ter un bloc d&amp;#x2019;instructions tant qu&amp;#x2019;une condition est v&amp;#x00E9;rifi&amp;#x00E9;e.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>S&amp;#x00E9;quentiel, r&amp;#x00E9;cursif et parall&amp;#x00E8;le</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Conditionnel, it&amp;#x00E9;ratif et r&amp;#x00E9;cursif</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Conditionnel, parall&amp;#x00E8;le et r&amp;#x00E9;cursif</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la diff&amp;#x00E9;rence entre une boucle positive et une boucle n&amp;#x00E9;gative ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Une boucle positive teste la condition avant d&amp;#x2019;ex&amp;#x00E9;cuter le bloc d&amp;#x2019;instructions, tandis qu&amp;#x2019;une boucle n&amp;#x00E9;gative teste la condition apr&amp;#x00E8;s avoir ex&amp;#x00E9;cut&amp;#x00E9; le bloc d&amp;#x2019;instructions.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Une boucle positive teste la condition apr&amp;#x00E8;s avoir ex&amp;#x00E9;cut&amp;#x00E9; le bloc d&amp;#x2019;instructions, tandis qu&amp;#x2019;une boucle n&amp;#x00E9;gative teste la condition avant d&amp;#x2019;ex&amp;#x00E9;cuter le bloc d&amp;#x2019;instructions.</text><feedback>Par exemple, en C++, une boucle while est une boucle n&amp;#x00E9;gative, car elle v&amp;#x00E9;rifie la condition au d&amp;#x00E9;but de chaque it&amp;#x00E9;ration. Une boucle do-while est une boucle positive, car elle v&amp;#x00E9;rifie la condition &amp;#x00E0; la fin de chaque it&amp;#x00E9;ration</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>) Une boucle positive ex&amp;#x00E9;cute le bloc d&amp;#x2019;instructions au moins une fois, tandis qu&amp;#x2019;une boucle n&amp;#x00E9;gative peut ne pas ex&amp;#x00E9;cuter le bloc d&amp;#x2019;instructions du tout.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Une boucle positive peut ne pas ex&amp;#x00E9;cuter le bloc d&amp;#x2019;instructions du tout, tandis qu&amp;#x2019;une boucle n&amp;#x00E9;gative ex&amp;#x00E9;cute le bloc d&amp;#x2019;instructions</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Qu&amp;#x2019;est-ce qu&amp;#x2019;un probl&amp;#x00E8;me en algorithmique ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Un probl&amp;#x00E8;me est une situation qui n&amp;#x00E9;cessite une action pour atteindre un objectif.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un probl&amp;#x00E8;me est une question qui appelle une r&amp;#x00E9;ponse unique et exacte.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un probl&amp;#x00E8;me est une t&amp;#x00E2;che qui consiste &amp;#x00E0; trouver une solution &amp;#x00E0; partir de donn&amp;#x00E9;es et de contraintes.</text><feedback>Un probl&amp;#x00E8;me en algorithmique peut &amp;#x00EA;tre d&amp;#x00E9;fini comme une t&amp;#x00E2;che qui consiste &amp;#x00E0; trouver une solution &amp;#x00E0; partir de donn&amp;#x00E9;es (entr&amp;#x00E9;es) et de contraintes (sorties attendues, r&amp;#x00E8;gles de gestion, etc.). La solution peut &amp;#x00EA;tre exprim&amp;#x00E9;e sous la forme d&amp;#x2019;un algorithme, c&amp;#x2019;est-&amp;#x00E0;-dire d&amp;#x2019;un encha&amp;#x00EE;nement d&amp;#x2019;op&amp;#x00E9;rations &amp;#x00E0; effectuer.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un probl&amp;#x00E8;me est un d&amp;#x00E9;fi qui stimule la cr&amp;#x00E9;ativit&amp;#x00E9; et l&amp;#x2019;innovation.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la diff&amp;#x00E9;rence entre un probl&amp;#x00E8;me et une instance d&amp;#x2019;un probl&amp;#x00E8;me ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Un probl&amp;#x00E8;me est une description g&amp;#x00E9;n&amp;#x00E9;rale d&amp;#x2019;une t&amp;#x00E2;che &amp;#x00E0; accomplir, tandis qu&amp;#x2019;une instance d&amp;#x2019;un probl&amp;#x00E8;me est une r&amp;#x00E9;alisation particuli&amp;#x00E8;re de cette t&amp;#x00E2;che avec des valeurs sp&amp;#x00E9;cifiques pour les donn&amp;#x00E9;es.</text><feedback>Un probl&amp;#x00E8;me en algorithmique peut &amp;#x00EA;tre vu comme une famille d&amp;#x2019;instances du m&amp;#x00EA;me type, qui partagent la m&amp;#x00EA;me structure mais diff&amp;#x00E8;rent par les valeurs des donn&amp;#x00E9;es. Par exemple, le probl&amp;#x00E8;me du tri consiste &amp;#x00E0; ranger dans l&amp;#x2019;ordre croissant ou d&amp;#x00E9;croissant une liste de nombres. Une instance du probl&amp;#x00E8;me du tri serait de trier la liste [3, 7, 1, 4, 9].</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un probl&amp;#x00E8;me est une r&amp;#x00E9;alisation particuli&amp;#x00E8;re d&amp;#x2019;une t&amp;#x00E2;che avec des valeurs sp&amp;#x00E9;cifiques pour les donn&amp;#x00E9;es, tandis qu&amp;#x2019;une instance d&amp;#x2019;un probl&amp;#x00E8;me est une description g&amp;#x00E9;n&amp;#x00E9;rale de cette t&amp;#x00E2;che &amp;#x00E0; accomplir.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un probl&amp;#x00E8;me est un ensemble de solutions possibles pour une t&amp;#x00E2;che donn&amp;#x00E9;e, tandis qu&amp;#x2019;une instance d&amp;#x2019;un probl&amp;#x00E8;me est un choix parmi ces solutions.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Un probl&amp;#x00E8;me est un choix parmi les solutions possibles pour une t&amp;#x00E2;che donn&amp;#x00E9;e, tandis qu&amp;#x2019;une instance d&amp;#x2019;un probl&amp;#x00E8;me est un ensemble de ces solutions.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la m&amp;#x00E9;thode g&amp;#x00E9;n&amp;#x00E9;rale pour analyser un probl&amp;#x00E8;me en algorithmique ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Lire attentivement l&amp;#x2019;&amp;#x00E9;nonc&amp;#x00E9; du probl&amp;#x00E8;me, reformuler le probl&amp;#x00E8;me sous la forme d&amp;#x2019;une question ou d&amp;#x2019;un mod&amp;#x00E8;le math&amp;#x00E9;matique, identifier les donn&amp;#x00E9;es d&amp;#x2019;entr&amp;#x00E9;e et les r&amp;#x00E9;sultats attendus, sp&amp;#x00E9;cifier les relations entre les donn&amp;#x00E9;es et les r&amp;#x00E9;sultats.</text><feedback>L&amp;#x2019;analyse d&amp;#x2019;un probl&amp;#x00E8;me en algorithmique suit g&amp;#x00E9;n&amp;#x00E9;ralement ces quatre &amp;#x00E9;tapes : lire attentivement l&amp;#x2019;&amp;#x00E9;nonc&amp;#x00E9; du probl&amp;#x00E8;me pour le</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Identifier les donn&amp;#x00E9;es d&amp;#x2019;entr&amp;#x00E9;e et les r&amp;#x00E9;sultats attendus, lire attentivement l&amp;#x2019;&amp;#x00E9;nonc&amp;#x00E9; du probl&amp;#x00E8;me, reformuler le probl&amp;#x00E8;me sous la forme d&amp;#x2019;un mod&amp;#x00E8;le math&amp;#x00E9;matique ou d&amp;#x2019;une question, sp&amp;#x00E9;cifier les relations entre les r&amp;#x00E9;sultats et les donn&amp;#x00E9;es.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Sp&amp;#x00E9;cifier les relations entre les donn&amp;#x00E9;es et les r&amp;#x00E9;sultats, identifier les donn&amp;#x00E9;es d&amp;#x2019;entr&amp;#x00E9;e et les r&amp;#x00E9;sultats attendus, lire attentivement l&amp;#x2019;&amp;#x00E9;nonc&amp;#x00E9; du probl&amp;#x00E8;me, reformuler le probl&amp;#x00E8;me sous la forme d&amp;#x2019;une question ou d&amp;#x2019;un mod&amp;#x00E8;le math&amp;#x00E9;matique.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Reformuler le probl&amp;#x00E8;me sous la forme d&amp;#x2019;un mod&amp;#x00E8;le math&amp;#x00E9;matique ou d&amp;#x2019;une question, sp&amp;#x00E9;cifier les relations entre les r&amp;#x00E9;sultats et les donn&amp;#x00E9;es, identifier les donn&amp;#x00E9;es d&amp;#x2019;entr&amp;#x00E9;e et les r&amp;#x00E9;sultats attendus, lire attentivement l&amp;#x2019;&amp;#x00E9;nonc&amp;#x00E9; du probl&amp;#x00E8;me.</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Probl&amp;#x00E8;me: Trier un tableau d&amp;#x2019;entiers par ordre croissant 
// Remplir le tableau avec des entiers al&amp;#x00E9;atoires entre 1 et 100
Pour i de 1 &amp;#x00E0; n faire
    tab[i] &amp;#x003C;- EntierAl&amp;#x00E9;atoire(1, 100)
FinPour

// Afficher le tableau avant le tri
Ecrire &quot;Le tableau avant le tri est:&quot;
Pour i de 1 &amp;#x00E0; n faire
    Ecrire tab[i]
FinPour

// Trier le tableau par ordre croissant en utilisant la m&amp;#x00E9;thode du tri &amp;#x00E0; bulles
Pour i de 1 &amp;#x00E0; n - 1 faire
    Pour j de 1 &amp;#x00E0; n - i faire
        Si tab[j] &amp;#x003E; tab[j + 1] alors // si l&apos;&amp;#x00E9;l&amp;#x00E9;ment courant est plus grand que l&apos;&amp;#x00E9;l&amp;#x00E9;ment suivant
            // &amp;#x00E9;changer les deux &amp;#x00E9;l&amp;#x00E9;ments
            temp &amp;#x003C;- tab[j]
            tab[j] &amp;#x003C;- tab[j + 1]
            tab[j + 1] &amp;#x003C;- temp
        FinSi
    FinPour
FinPour

// Afficher le tableau apr&amp;#x00E8;s le tri
Ecrire &quot;Le tableau apr&amp;#x00E8;s le tri est:&quot;
Pour i de 1 &amp;#x00E0; n faire
    Ecrire tab[i]
FinPour

Quelle est la fonction de la variable temp ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Stocker une valeur temporaire lors de l&amp;#x2019;&amp;#x00E9;change des &amp;#x00E9;l&amp;#x00E9;ments du tableau</text><feedback>La variable temp est utilis&amp;#x00E9;e pour stocker la valeur de l&amp;#x2019;&amp;#x00E9;l&amp;#x00E9;ment courant (tab[j]) avant de le remplacer par la valeur de l&amp;#x2019;&amp;#x00E9;l&amp;#x00E9;ment suivant (tab[j + 1]). Cela permet de ne pas perdre la valeur initiale de tab[j] et de la r&amp;#x00E9;affecter &amp;#x00E0; tab[j + 1].</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Stocker la taille du tableau</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Stocker le nombre d&amp;#x2019;it&amp;#x00E9;rations de la boucle de tri</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Stocker le plus petit &amp;#x00E9;l&amp;#x00E9;ment du tableau</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la valeur maximale que peut prendre la variable i dans la boucle de tri ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>n</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>n - 1</text><feedback>La variable i parcourt le tableau de 1 &amp;#x00E0; n - 1, car il n&amp;#x2019;est pas n&amp;#x00E9;cessaire de comparer le dernier &amp;#x00E9;l&amp;#x00E9;ment avec lui-m&amp;#x00EA;me. A chaque it&amp;#x00E9;ration, le plus grand &amp;#x00E9;l&amp;#x00E9;ment du tableau non tri&amp;#x00E9; est plac&amp;#x00E9; &amp;#x00E0; la fin du tableau.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>n - 2</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>n - i</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la condition qui permet d&amp;#x2019;&amp;#x00E9;changer deux &amp;#x00E9;l&amp;#x00E9;ments du tableau ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>tab[j] &amp;#x003C; tab[j + 1]</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>tab[j] &amp;#x003E; tab[j + 1]</text><feedback>La condition qui permet d&amp;#x2019;&amp;#x00E9;changer deux &amp;#x00E9;l&amp;#x00E9;ments du tableau est que l&amp;#x2019;&amp;#x00E9;l&amp;#x00E9;ment courant (tab[j]) soit plus grand que l&amp;#x2019;&amp;#x00E9;l&amp;#x00E9;ment suivant (tab[j + 1]). Cela garantit que le tableau soit tri&amp;#x00E9; par ordre croissant &amp;#x00E0; la fin de l&amp;#x2019;algorithme.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>tab[j] = tab[j + 1]</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>tab[j] != tab[j + 1]</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quelle est la complexit&amp;#x00E9; temporelle du tri &amp;#x00E0; bulles dans le pire des cas ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>O(n)</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n log n)</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n^2)</text><feedback>La complexit&amp;#x00E9; temporelle du tri &amp;#x00E0; bulles dans le pire des cas est O(n^2), car il faut effectuer n - 1 it&amp;#x00E9;rations de la boucle externe, et &amp;#x00E0; chaque it&amp;#x00E9;ration, il faut effectuer n - i comparaisons dans la boucle interne. Le nombre total d&amp;#x2019;op&amp;#x00E9;rations est donc proportionnel &amp;#x00E0; n * (n - 1), ce qui est &amp;#x00E9;quivalent &amp;#x00E0; O(n^2).</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(2^n)</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Quel est l&amp;#x2019;avantage du tri &amp;#x00E0; bulles par rapport aux autres m&amp;#x00E9;thodes de tri ?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Il est plus rapide</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Il est plus simple</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Il est plus stable</text><feedback>Le tri &amp;#x00E0; bulles est un algorithme de tri stable, ce qui signifie qu&amp;#x2019;il conserve l&amp;#x2019;ordre relatif des &amp;#x00E9;l&amp;#x00E9;ments &amp;#x00E9;gaux dans le tableau. Par exemple, si le tableau contient des paires (nom, note), le tri &amp;#x00E0; bulles ne changera pas l&amp;#x2019;ordre des &amp;#x00E9;l&amp;#x00E8;ves ayant la m&amp;#x00EA;me note. Ce n&amp;#x2019;est pas le cas de tous les algorithmes de tri, comme le tri rapide ou le tri par s&amp;#x00E9;lection.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Il est plus efficace</text><feedback></feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record></questions>
</data>

<hotpot-config-file>
<jquiz>
<exercise-subtitle>Quiz</exercise-subtitle>
<instructions></instructions>
<guess-correct>Correct!</guess-correct>
<guess-incorrect>Sorry! Try again.</guess-incorrect>
<partly-incorrect>Your answer is partly wrong: </partly-incorrect>
<enter-a-guess>Please enter a guess.</enter-a-guess>
<next-correct-letter>Next correct letter in the answer: </next-correct-letter>
<correct-answers>Correct answers: </correct-answers>
<show-answer-caption>Show answer</show-answer-caption>
<include-hint>1</include-hint>
<include-show-answer>1</include-show-answer>
<next-ex-url>nextpage.htm</next-ex-url>
<send-email>0</send-email>
<continuous-scoring>1</continuous-scoring>
<show-correct-first-time>1</show-correct-first-time>
<shuffle-questions>1</shuffle-questions>
<shuffle-answers>1</shuffle-answers>
<show-limited-questions>0</show-limited-questions>
<questions-to-show>2</questions-to-show>
<short-answer-tries-on-hybrid-q>2</short-answer-tries-on-hybrid-q>
<separate-javascript-file>0</separate-javascript-file>
<case-sensitive>0</case-sensitive>
<include-keypad>0</include-keypad>
</jquiz>

<global>
<your-score-is>Your score is </your-score-is>
<correct-indicator>&amp;#x2714;</correct-indicator>
<incorrect-indicator>&amp;#x2718;</incorrect-indicator>
<correct-first-time>Questions answered correctly first time: </correct-first-time>
<completed-so-far>Questions completed so far: </completed-so-far>
<exercise-completed>You have completed the exercise.</exercise-completed>
<keypad-characters></keypad-characters>
<times-up>Your time is over!</times-up>
<next-ex-caption>=&amp;#x003E;</next-ex-caption>
<back-caption>&amp;#x003C;=</back-caption>
<contents-caption>Index</contents-caption>
<include-next-ex>1</include-next-ex>
<include-contents>1</include-contents>
<include-back>1</include-back>
<contents-url>contents.htm</contents-url>
<graphic-url></graphic-url>
<font-face>Arial,&quot;Comic Sans MS&quot;,Geneva,sans-serif</font-face>
<font-size>medium</font-size>
<page-bg-color>#C0C0C0</page-bg-color>
<title-color>#000000</title-color>
<ex-bg-color>#FFFFFF</ex-bg-color>
<text-color>#000000</text-color>
<link-color>#0000FF</link-color>
<vlink-color>#0000CC</vlink-color>
<nav-bar-color>#000000</nav-bar-color>
<formmail-url>http://yourserver.com/cgi-bin/FormMail.pl</formmail-url>
<email>you@yourserver.com</email>
<name-please>Please enter your name:</name-please>
<user-string-1>one</user-string-1>
<user-string-2>two</user-string-2>
<user-string-3>three</user-string-3>
<header-code></header-code>
<correct-first-time>Questions answered correctly first time: </correct-first-time>
<check-caption>Check</check-caption>
<ok-caption>OK</ok-caption>
<next-q-caption>=&amp;#x003E;</next-q-caption>
<last-q-caption>&amp;#x003C;=</last-q-caption>
<hint-caption>Hint</hint-caption>
<show-all-questions-caption>Show all questions</show-all-questions-caption>
<show-one-by-one-caption>Show questions one by one</show-one-by-one-caption>
<show-also-correct>1</show-also-correct>
<process-for-rtl>0</process-for-rtl>
<include-scorm-12>0</include-scorm-12>
</global>
</hotpot-config-file>
</hotpot-jquiz-file>
